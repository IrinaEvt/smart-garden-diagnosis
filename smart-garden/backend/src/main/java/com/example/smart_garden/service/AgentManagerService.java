package com.example.smart_garden.service;

import com.example.smart_garden.agents.PlantAgent;
import com.example.smart_garden.agents.SensorAgent;
import jade.core.Profile;
import jade.core.ProfileImpl;
import jade.core.Runtime;
import jade.wrapper.AgentContainer;
import jade.wrapper.AgentController;
import jade.wrapper.ContainerController;
import org.springframework.stereotype.Service;

import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

@Service
public class AgentManagerService {

    private ContainerController container;

    // üåø –†–µ–≥–∏—Å—Ç—Ä–∏—Ä–∞–Ω–∏ PlantAgent-–∏ –ø–æ –∏–º–µ –Ω–∞ —Ä–∞—Å—Ç–µ–Ω–∏–µ
    private final Map<String, PlantAgent> plantAgents = new ConcurrentHashMap<>();

    public void setContainer(ContainerController container) {
        this.container = container;
    }

    // ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä–∞–Ω–µ –Ω–∞ PlantAgent –æ—Ç —Å–∞–º–∏—è –∞–≥–µ–Ω—Ç –≤ setup()
    public void registerPlantAgent(String plantName, PlantAgent agent) {
        plantAgents.put(plantName, agent);
        System.out.println("üìå –†–µ–≥–∏—Å—Ç—Ä–∏—Ä–∞–Ω PlantAgent –∑–∞: " + plantName);
    }

    // ‚ùå –ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –æ—Ç —Ä–µ–≥–∏—Å—Ç—ä—Ä–∞ (–æ—Ç takeDown)
    public void unregisterPlantAgent(String plantName) {
        plantAgents.remove(plantName);
        System.out.println("üóëÔ∏è –ü—Ä–µ–º–∞—Ö–Ω–∞—Ç PlantAgent –∑–∞: " + plantName);
    }

    // üîç –í–∑–µ–º–∏ PlantAgent –ø–æ –∏–º–µ –Ω–∞ —Ä–∞—Å—Ç–µ–Ω–∏–µ
    public PlantAgent getPlantAgent(String plantName) {
        return plantAgents.get(plantName);
    }

    // üöÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ SensorAgent
    public void startSensorAgent(Long plantId) {
        if (container == null) return;

        String agentName = "SensorAgent-" + plantId;

        try {
            jade.wrapper.AgentController existingAgent = container.getAgent(agentName);
            System.out.println("‚ö†Ô∏è SensorAgent –≤–µ—á–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞: " + agentName);
            return;
        } catch (Exception ignored) {
        }

        try {
            container.createNewAgent(
                    agentName,
                    SensorAgent.class.getName(),
                    new Object[]{plantId}
            ).start();
            System.out.println("üöÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω SensorAgent: " + agentName);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // üöÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–π reasoning –∞–≥–µ–Ω—Ç –∞–∫–æ –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞
    public void startPlantAgent(Long plantId, String plantName, String plantType) {
        if (getPlantAgent(plantName) != null) {
            System.out.println("‚ö†Ô∏è PlantAgent –≤–µ—á–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞: " + plantName);
            return;
        }

        try {
            String agentName = "PlantAgent-" + plantName;
            AgentController controller = container.createNewAgent(
                    agentName,
                    PlantAgent.class.getName(),
                    new Object[]{plantId,plantName, plantType}
            );
            controller.start();
            System.out.println("üöÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω PlantAgent: " + agentName);
        } catch (Exception e) {
            System.err.println("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ PlantAgent –∑–∞ " + plantName);
            e.printStackTrace();
        }
    }

    // üß† –ò–∑–≤–∏–∫–∞–π reasoning, –∞–∫–æ –∞–≥–µ–Ω—Ç—ä—Ç –µ –∞–∫—Ç–∏–≤–µ–Ω
    public void triggerReasoningFor(Long plantId, String plantName, String plantType) {
        PlantAgent agent = getPlantAgent(plantName);
        if (agent != null) {
            agent.doReasoning();  // —Ç—Ä—è–±–≤–∞ –¥–∞ –≥–æ –∏–º–∞ –≤ PlantAgent
        } else {
            System.out.println("‚ùó PlantAgent –Ω–µ –µ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω ‚Äì —Å—Ç–∞—Ä—Ç–∏—Ä–∞–º —Å–µ–≥–∞.");
            startPlantAgent(plantId, plantName, plantType);
        }
    }

    // üõë –°–ø—Ä–∏ –∞–≥–µ–Ω—Ç–∏—Ç–µ —Å–≤—ä—Ä–∑–∞–Ω–∏ —Å —Ä–∞—Å—Ç–µ–Ω–∏–µ
    public void stopAgentsForPlant(Long plantId, String plantName) {
        try {
            String sensorAgentName = "SensorAgent-" + plantId;
            String plantAgentName = "PlantAgent-" + plantName;

            System.out.println("üõë –°–ø–∏—Ä–∞–Ω–µ –Ω–∞ –∞–≥–µ–Ω—Ç–∏ –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏–µ: " + plantName);

            container.getAgent(sensorAgentName).kill();
            container.getAgent(plantAgentName).kill();

        } catch (Exception e) {
            System.err.println("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å–ø–∏—Ä–∞–Ω–µ –Ω–∞ –∞–≥–µ–Ω—Ç–∏—Ç–µ –∑–∞ " + plantName);
            e.printStackTrace();
        }

        // –ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ç–µ (–∑–∞ –≤—Å–µ–∫–∏ —Å–ª—É—á–∞–π)
        unregisterPlantAgent(plantName);
    }
}
